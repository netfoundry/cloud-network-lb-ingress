locals {
  user_data = [ for s in var.er_map : <<EOF
#cloud-config
package_update: true
packages:
  - keepalived
write_files:
- encoding: b64
  content: ""
  owner: root:root
  path: /opt/netfoundry/set-ip.sh
  permissions: '0755'
- encoding: b64
  content: "IyEvYmluL2Jhc2gKCmlmIFsgIiQxIiA9PSAibWFzdGVyIiBdOyB0aGVuCiAgICB6ZncgLUkgLWMgJChob3N0ICQoaG9zdG5hbWUpIHxhd2sgLUYnW1s6c3BhY2U6XV0rfD0nICd7cHJpbnQgJDR9JykgLW0gMzIgLW8gMC4wLjAuMCAtbiAwIC1sIDgwODEgLWggODA4MSAtdCAwIC1wIHRjcAplbGlmIFsgIiQxIiA9PSAiYmFja3VwIiBdOyB0aGVuCiAgICB6ZncgLUQgLWMgJChob3N0ICQoaG9zdG5hbWUpIHxhd2sgLUYnW1s6c3BhY2U6XV0rfD0nICd7cHJpbnQgJDR9JykgLW0gMzIgLW8gMC4wLjAuMCAtbiAwIC1sIDgwODEgLWggODA4MSAtdCAwIC1wIHRjcAplbHNlCiAgICBlY2hvICJubyB2YWxpZCBhcmd1bWVudCBwYXNzZWQiCmZpCg=="
  owner: root:root
  path: /opt/netfoundry/vrrp_notify.sh
  permissions: '0755'
- encoding: b64
  content: "Z2xvYmFsX2RlZnMgewogICAgICAgIHNjcmlwdF91c2VyIHppZ2d5IHppZ2d5CiAgICAgICAgZW5hYmxlX3NjcmlwdF9zZWN1cml0eQp9CnZycnBfc2NyaXB0IHdhbl9jaGVjayB7CiAgICAgICAgc2NyaXB0ICIvb3B0L25ldGZvdW5kcnkvZXJoY2hlY2tlci5weXoiCiAgICAgICAgaW50ZXJ2YWwgMwogICAgICAgIHJpc2UgMgogICAgICAgIGZhbGwgMgogICAgICAgIHVzZXIgemlnZ3kgemlnZ3kKfQp2cnJwX2luc3RhbmNlIFZJXzEgewogICAgICAgIGludGVyZmFjZSBlbnAwczUKICAgICAgICB2aXJ0dWFsX3JvdXRlcl9pZCA1MQogICAgICAgIGNoZWNrX3VuaWNhc3Rfc3JjCiAgICAgICAgdHJhY2tfc2NyaXB0IHsKICAgICAgICAgICAgICAgIHdhbl9jaGVjawogICAgICAgIH0KICAgICAgICBub3RpZnlfbWFzdGVyICIvb3B0L25ldGZvdW5kcnkvdnJycF9ub3RpZnkuc2ggbWFzdGVyIiByb290IHJvb3QKICAgICAgICBub3RpZnlfZmF1bHQgIi9vcHQvbmV0Zm91bmRyeS92cnJwX25vdGlmeS5zaCBiYWNrdXAiIHJvb3Qgcm9vdAp9"
  owner: root:root
  path: /etc/keepalived/keepalived.conf
  permissions: '0644'
- encoding: b64
  content: "IyEvYmluL2Jhc2gKCiMgVmFyaWFibGVzCkNMT1VEX1pJVElfSE9NRT0iL29wdC9uZXRmb3VuZHJ5IgpPUEVOX1pJVElfSE9NRT0iL29wdC9vcGVueml0aSIKWklUSV9IT01FPSIke0NMT1VEX1pJVElfSE9NRX0veml0aSIKWklUSV9DTEk9IiR7WklUSV9IT01FfS96aXRpIgpFQlBGX0JJTj0iJHtPUEVOX1pJVElfSE9NRX0vYmluIgoKIyBEaXZlcnRlciB1cGRhdGUgZnVuY3Rpb24gdG8gdGhlIGxhdGVzdCB2ZXJzaW9uCmRpdmVydGVyX3VwZGF0ZSgpIHsKICBpZiBbWyAkKCR7WklUSV9DTEl9IC0tdmVyc2lvbiB8IGN1dCAtZCJ2IiAtZiAyKSA+ICIwLjI3LjIiIF1dOyB0aGVuCiAgICBhcmNoPWB1bmFtZSAtbWAKICAgIGlmIFsgJGFyY2ggPT0gIng4Nl82NCIgXTsgdGhlbgogICAgICBhcmNoPSJhbWQ2NCIKICAgIGZpCiAgICBicm93c2VyX2Rvd25sb2FkX3VybD1gY3VybCAtcyBodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL25ldGZvdW5kcnkvemZ3L3JlbGVhc2VzL2xhdGVzdCB8IGpxIC0tYXJnIGFyY2ggJGFyY2ggLXIgJy5hc3NldHNbXSB8IHNlbGVjdCgoLm5hbWUgfCB0ZXN0KCJyb3V0ZXIiKSkgYW5kICgubmFtZSB8IHRlc3QoJGFyY2gpKSkuYnJvd3Nlcl9kb3dubG9hZF91cmwnYAogICAgY3VybCAtc0wgJGJyb3dzZXJfZG93bmxvYWRfdXJsID4gL3RtcC96ZncuZGViCiAgICBzdWRvIGRwa2cgLWkgL3RtcC96ZncuZGViCiAgICBybSAvdG1wL3pmdy5kZWIKICAgIHN1ZG8gemZ3IC1RCiAgICBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IHppdGktcm91dGVyCiAgZWxzZQogICAgZWNobyAiSU5GTzogZWJwZiBjYW5ub3QgYmUgaW5zdGFsbGVkLCB0aGUgaW5zdGFsbGVkIHppdGkgdmVyc2lvbiBpcyBub3QgMC4yNy4zIG9yIGhpZ2hlci4iCiAgZmkKfQojIERpdmVydGVyIGVuYWJsZSBmdW5jdGlvbgpkaXZlcnRlcl9lbmFibGUoKSB7CiAgc3RhdHVzPWBkcGtnIC1zIHpmdy1yb3V0ZXIgMj4vZGV2L251bGxgCiAgaWYgW1sgYGVjaG8gJHN0YXR1cyB8YXdrIC1GJ1tbOnNwYWNlOl1dK3w9JyAne3ByaW50ICQ0fSdgID09ICJpbnN0YWxsIiBdXSAmJiBbWyAtZiAkRUJQRl9CSU4vc3RhcnRfZWJwZl9yb3V0ZXIucHkgXV07IHRoZW4KICAgIHN1ZG8gJEVCUEZfQklOL3N0YXJ0X2VicGZfcm91dGVyLnB5CiAgICBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IHppdGktcm91dGVyCiAgZWxzZSAKICAgIGVjaG8gJ0lORk86IGVicGYgbm90IGluc3RhbGxlZCwgcnVuIGRpdmVydGVyLXVwZGF0ZSB0byBpbnN0YWxsIGl0LicKICBmaQp9CiMgSGVhbHRoIENoZWNrZXIgU2NyaXB0IHVwZGF0ZSBmdW5jdGlvbiB0byB0aGUgbGF0ZXN0IHZlcnNpb24KZXJoY2hlY2tlcl91cGRhdGUoKSB7CiAgaWYgW1sgJCgke1pJVElfQ0xJfSAtLXZlcnNpb24gfCBjdXQgLWQidiIgLWYgMikgPiAiMC4yOC4wIiBdXTsgdGhlbgogICAgYXJjaD1gdW5hbWUgLW1gCiAgICBpZiBbICRhcmNoID09ICJ4ODZfNjQiIF07IHRoZW4KICAgICAgYXJjaD0iYW1kNjQiCiAgICBmaQogICAgYnJvd3Nlcl9kb3dubG9hZF91cmw9YGN1cmwgLXMgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9uZXRmb3VuZHJ5L2VkZ2Utcm91dGVyLWhlYWx0aC1jaGVja2VyL3JlbGVhc2VzL2xhdGVzdCB8IGpxIC0tYXJnIGFyY2ggJGFyY2ggLXIgJy5hc3NldHNbXSB8IHNlbGVjdCgubmFtZSB8IHRlc3QoJGFyY2gpKS5icm93c2VyX2Rvd25sb2FkX3VybCdgCiAgICBjdXJsIC1zTCAkYnJvd3Nlcl9kb3dubG9hZF91cmwgPiAvdG1wL2VyaGNoZWNrZXIudGFyLmd6CiAgICBzdWRvIHRhciB4emYgL3RtcC9lcmhjaGVja2VyLnRhci5neiAtQyAkQ0xPVURfWklUSV9IT01FCiAgICBybSAvdG1wL2VyaGNoZWNrZXIudGFyLmd6CiAgZWxzZQogICAgZWNobyAiSU5GTzogZXJoY2hlY2tlciBzY3JpcHQgY2Fubm90IGJlIGluc3RhbGxlZCwgdGhlIGluc3RhbGxlZCB6aXRpIHZlcnNpb24gaXMgbm90IDAuMjguMSBvciBoaWdoZXIuIgogIGZpCn0KCiMjIyBNYWluCmRpdmVydGVyX3VwZGF0ZQpkaXZlcnRlcl9lbmFibGUKZXJoY2hlY2tlcl91cGRhdGUK"
  owner: root:root
  path: /var/lib/cloud/diverter.sh
  permissions: '0755'
- content: |
    #Netfoundry Added file
    [Resolve]
    DNS=100.127.255.254
  owner: root:root
  path: /var/lib/cloud/01-netfoundry.conf
  permissions: '0644'
runcmd:
- |
  /opt/netfoundry/set-ip.sh -tp=static -ip=100.127.255.254 -pr=32 -in=lo -f
  LANIF="$(/sbin/ip -o link show up|awk '$9=="UP" {print $2;}'|head -1|tr -d ":")"
  /opt/netfoundry/router-registration --dnsIPRange ${s.dnsSvcIpRange} --tunnel_ip 100.127.255.254 --lanIf $LANIF ${s.edgeRouterKey}
  /var/lib/cloud/diverter.sh
  /usr/bin/systemctl restart keepalived.service
EOF
  ]
  flatten_list = {
        for item in flatten([
            for table in module.vpc1.public_route_table_ids : [
                for vm in module.compute_backend.*.id: {
                    vm = vm
                    table = table
                }
            ] 
        ])
        : item.vm => item
    }
}